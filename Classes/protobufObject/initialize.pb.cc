// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: initialize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "initialize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINInitializeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINInitializeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINInitializeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINInitializeResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_initialize_2eproto() {
  protobuf_AddDesc_initialize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "initialize.proto");
  GOOGLE_CHECK(file != NULL);
  BINInitializeRequest_descriptor_ = file->message_type(0);
  static const int BINInitializeRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, cp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, appversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, deviceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, deviceinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, ipaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, language_),
  };
  BINInitializeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINInitializeRequest_descriptor_,
      BINInitializeRequest::default_instance_,
      BINInitializeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINInitializeRequest));
  BINLevel_descriptor_ = file->message_type(1);
  static const int BINLevel_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, cashgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, goldgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, exp_),
  };
  BINLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINLevel_descriptor_,
      BINLevel::default_instance_,
      BINLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINLevel));
  BINInitializeResponse_descriptor_ = file->message_type(2);
  static const int BINInitializeResponse_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, currentappversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, leveldirectory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, downloadurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, cashcurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, goldcurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, forceupdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, enablequickplay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, enablecashsystem_),
  };
  BINInitializeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINInitializeResponse_descriptor_,
      BINInitializeResponse::default_instance_,
      BINInitializeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINInitializeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINInitializeResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_initialize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINInitializeRequest_descriptor_, &BINInitializeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINLevel_descriptor_, &BINLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINInitializeResponse_descriptor_, &BINInitializeResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_initialize_2eproto() {
  delete BINInitializeRequest::default_instance_;
  delete BINInitializeRequest_reflection_;
  delete BINLevel::default_instance_;
  delete BINLevel_reflection_;
  delete BINInitializeResponse::default_instance_;
  delete BINInitializeResponse_reflection_;
}

void protobuf_AddDesc_initialize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020initialize.proto\"\222\001\n\024BINInitializeRequ"
    "est\022\n\n\002cp\030\001 \001(\t\022\022\n\nappVersion\030\002 \001(\t\022\020\n\010d"
    "eviceId\030\003 \001(\t\022\022\n\ndeviceInfo\030\004 \001(\t\022\021\n\tipA"
    "ddress\030\005 \001(\t\022\017\n\007country\030\006 \001(\t\022\020\n\010languag"
    "e\030\007 \001(\t\"X\n\010BINLevel\022\r\n\005level\030\001 \002(\005\022\014\n\004na"
    "me\030\002 \002(\t\022\020\n\010cashGift\030\003 \001(\003\022\020\n\010goldGift\030\004"
    " \001(\003\022\013\n\003exp\030\005 \002(\003\"\205\002\n\025BINInitializeRespo"
    "nse\022\024\n\014responseCode\030\001 \002(\010\022\017\n\007message\030\002 \001"
    "(\t\022\031\n\021currentAppVersion\030\003 \002(\t\022!\n\016levelDi"
    "rectory\030\004 \003(\0132\t.BINLevel\022\023\n\013downloadUrl\030"
    "\005 \001(\t\022\024\n\014cashCurrency\030\006 \001(\t\022\024\n\014goldCurre"
    "ncy\030\007 \001(\t\022\023\n\013forceUpdate\030\010 \002(\010\022\027\n\017enable"
    "QuickPlay\030\t \002(\010\022\030\n\020enableCashSystem\030\n \002("
    "\010B\036\n\034com.mi.game.network.data.bin", 553);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "initialize.proto", &protobuf_RegisterTypes);
  BINInitializeRequest::default_instance_ = new BINInitializeRequest();
  BINLevel::default_instance_ = new BINLevel();
  BINInitializeResponse::default_instance_ = new BINInitializeResponse();
  BINInitializeRequest::default_instance_->InitAsDefaultInstance();
  BINLevel::default_instance_->InitAsDefaultInstance();
  BINInitializeResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_initialize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_initialize_2eproto {
  StaticDescriptorInitializer_initialize_2eproto() {
    protobuf_AddDesc_initialize_2eproto();
  }
} static_descriptor_initializer_initialize_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINInitializeRequest::kCpFieldNumber;
const int BINInitializeRequest::kAppVersionFieldNumber;
const int BINInitializeRequest::kDeviceIdFieldNumber;
const int BINInitializeRequest::kDeviceInfoFieldNumber;
const int BINInitializeRequest::kIpAddressFieldNumber;
const int BINInitializeRequest::kCountryFieldNumber;
const int BINInitializeRequest::kLanguageFieldNumber;
#endif  // !_MSC_VER

BINInitializeRequest::BINInitializeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINInitializeRequest::InitAsDefaultInstance() {
}

BINInitializeRequest::BINInitializeRequest(const BINInitializeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINInitializeRequest::SharedCtor() {
  _cached_size_ = 0;
  cp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  appversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  deviceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  language_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINInitializeRequest::~BINInitializeRequest() {
  SharedDtor();
}

void BINInitializeRequest::SharedDtor() {
  if (cp_ != &::google::protobuf::internal::kEmptyString) {
    delete cp_;
  }
  if (appversion_ != &::google::protobuf::internal::kEmptyString) {
    delete appversion_;
  }
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceid_;
  }
  if (deviceinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceinfo_;
  }
  if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddress_;
  }
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    delete country_;
  }
  if (language_ != &::google::protobuf::internal::kEmptyString) {
    delete language_;
  }
  if (this != default_instance_) {
  }
}

void BINInitializeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINInitializeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINInitializeRequest_descriptor_;
}

const BINInitializeRequest& BINInitializeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_initialize_2eproto();
  return *default_instance_;
}

BINInitializeRequest* BINInitializeRequest::default_instance_ = NULL;

BINInitializeRequest* BINInitializeRequest::New() const {
  return new BINInitializeRequest;
}

void BINInitializeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cp()) {
      if (cp_ != &::google::protobuf::internal::kEmptyString) {
        cp_->clear();
      }
    }
    if (has_appversion()) {
      if (appversion_ != &::google::protobuf::internal::kEmptyString) {
        appversion_->clear();
      }
    }
    if (has_deviceid()) {
      if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
        deviceid_->clear();
      }
    }
    if (has_deviceinfo()) {
      if (deviceinfo_ != &::google::protobuf::internal::kEmptyString) {
        deviceinfo_->clear();
      }
    }
    if (has_ipaddress()) {
      if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
        ipaddress_->clear();
      }
    }
    if (has_country()) {
      if (country_ != &::google::protobuf::internal::kEmptyString) {
        country_->clear();
      }
    }
    if (has_language()) {
      if (language_ != &::google::protobuf::internal::kEmptyString) {
        language_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINInitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cp().data(), this->cp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_appVersion;
        break;
      }

      // optional string appVersion = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_deviceId;
        break;
      }

      // optional string deviceId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_deviceInfo;
        break;
      }

      // optional string deviceInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->deviceinfo().data(), this->deviceinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ipAddress;
        break;
      }

      // optional string ipAddress = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ipAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ipaddress().data(), this->ipaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_country;
        break;
      }

      // optional string country = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_language;
        break;
      }

      // optional string language = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINInitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string cp = 1;
  if (has_cp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cp().data(), this->cp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cp(), output);
  }

  // optional string appVersion = 2;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->appversion(), output);
  }

  // optional string deviceId = 3;
  if (has_deviceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->deviceid(), output);
  }

  // optional string deviceInfo = 4;
  if (has_deviceinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceinfo().data(), this->deviceinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->deviceinfo(), output);
  }

  // optional string ipAddress = 5;
  if (has_ipaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ipaddress().data(), this->ipaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->ipaddress(), output);
  }

  // optional string country = 6;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->country(), output);
  }

  // optional string language = 7;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->language(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINInitializeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string cp = 1;
  if (has_cp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cp().data(), this->cp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cp(), target);
  }

  // optional string appVersion = 2;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appversion(), target);
  }

  // optional string deviceId = 3;
  if (has_deviceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deviceid(), target);
  }

  // optional string deviceInfo = 4;
  if (has_deviceinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceinfo().data(), this->deviceinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->deviceinfo(), target);
  }

  // optional string ipAddress = 5;
  if (has_ipaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ipaddress().data(), this->ipaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ipaddress(), target);
  }

  // optional string country = 6;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->country(), target);
  }

  // optional string language = 7;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->language(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINInitializeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string cp = 1;
    if (has_cp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cp());
    }

    // optional string appVersion = 2;
    if (has_appversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appversion());
    }

    // optional string deviceId = 3;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceid());
    }

    // optional string deviceInfo = 4;
    if (has_deviceinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceinfo());
    }

    // optional string ipAddress = 5;
    if (has_ipaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ipaddress());
    }

    // optional string country = 6;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string language = 7;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINInitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINInitializeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINInitializeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINInitializeRequest::MergeFrom(const BINInitializeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cp()) {
      set_cp(from.cp());
    }
    if (from.has_appversion()) {
      set_appversion(from.appversion());
    }
    if (from.has_deviceid()) {
      set_deviceid(from.deviceid());
    }
    if (from.has_deviceinfo()) {
      set_deviceinfo(from.deviceinfo());
    }
    if (from.has_ipaddress()) {
      set_ipaddress(from.ipaddress());
    }
    if (from.has_country()) {
      set_country(from.country());
    }
    if (from.has_language()) {
      set_language(from.language());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINInitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINInitializeRequest::CopyFrom(const BINInitializeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINInitializeRequest::IsInitialized() const {

  return true;
}

void BINInitializeRequest::Swap(BINInitializeRequest* other) {
  if (other != this) {
    std::swap(cp_, other->cp_);
    std::swap(appversion_, other->appversion_);
    std::swap(deviceid_, other->deviceid_);
    std::swap(deviceinfo_, other->deviceinfo_);
    std::swap(ipaddress_, other->ipaddress_);
    std::swap(country_, other->country_);
    std::swap(language_, other->language_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINInitializeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINInitializeRequest_descriptor_;
  metadata.reflection = BINInitializeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINLevel::kLevelFieldNumber;
const int BINLevel::kNameFieldNumber;
const int BINLevel::kCashGiftFieldNumber;
const int BINLevel::kGoldGiftFieldNumber;
const int BINLevel::kExpFieldNumber;
#endif  // !_MSC_VER

BINLevel::BINLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINLevel::InitAsDefaultInstance() {
}

BINLevel::BINLevel(const BINLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINLevel::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cashgift_ = GOOGLE_LONGLONG(0);
  goldgift_ = GOOGLE_LONGLONG(0);
  exp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINLevel::~BINLevel() {
  SharedDtor();
}

void BINLevel::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void BINLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINLevel_descriptor_;
}

const BINLevel& BINLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_initialize_2eproto();
  return *default_instance_;
}

BINLevel* BINLevel::default_instance_ = NULL;

BINLevel* BINLevel::New() const {
  return new BINLevel;
}

void BINLevel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    cashgift_ = GOOGLE_LONGLONG(0);
    goldgift_ = GOOGLE_LONGLONG(0);
    exp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cashGift;
        break;
      }

      // optional int64 cashGift = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cashGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cashgift_)));
          set_has_cashgift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_goldGift;
        break;
      }

      // optional int64 goldGift = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goldGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &goldgift_)));
          set_has_goldgift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_exp;
        break;
      }

      // required int64 exp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int64 cashGift = 3;
  if (has_cashgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->cashgift(), output);
  }

  // optional int64 goldGift = 4;
  if (has_goldgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->goldgift(), output);
  }

  // required int64 exp = 5;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int64 cashGift = 3;
  if (has_cashgift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->cashgift(), target);
  }

  // optional int64 goldGift = 4;
  if (has_goldgift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->goldgift(), target);
  }

  // required int64 exp = 5;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINLevel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 cashGift = 3;
    if (has_cashgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cashgift());
    }

    // optional int64 goldGift = 4;
    if (has_goldgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->goldgift());
    }

    // required int64 exp = 5;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINLevel::MergeFrom(const BINLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_cashgift()) {
      set_cashgift(from.cashgift());
    }
    if (from.has_goldgift()) {
      set_goldgift(from.goldgift());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINLevel::CopyFrom(const BINLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINLevel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000013) != 0x00000013) return false;

  return true;
}

void BINLevel::Swap(BINLevel* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(name_, other->name_);
    std::swap(cashgift_, other->cashgift_);
    std::swap(goldgift_, other->goldgift_);
    std::swap(exp_, other->exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINLevel_descriptor_;
  metadata.reflection = BINLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINInitializeResponse::kResponseCodeFieldNumber;
const int BINInitializeResponse::kMessageFieldNumber;
const int BINInitializeResponse::kCurrentAppVersionFieldNumber;
const int BINInitializeResponse::kLevelDirectoryFieldNumber;
const int BINInitializeResponse::kDownloadUrlFieldNumber;
const int BINInitializeResponse::kCashCurrencyFieldNumber;
const int BINInitializeResponse::kGoldCurrencyFieldNumber;
const int BINInitializeResponse::kForceUpdateFieldNumber;
const int BINInitializeResponse::kEnableQuickPlayFieldNumber;
const int BINInitializeResponse::kEnableCashSystemFieldNumber;
#endif  // !_MSC_VER

BINInitializeResponse::BINInitializeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINInitializeResponse::InitAsDefaultInstance() {
}

BINInitializeResponse::BINInitializeResponse(const BINInitializeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINInitializeResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currentappversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  downloadurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cashcurrency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  goldcurrency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  forceupdate_ = false;
  enablequickplay_ = false;
  enablecashsystem_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINInitializeResponse::~BINInitializeResponse() {
  SharedDtor();
}

void BINInitializeResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (currentappversion_ != &::google::protobuf::internal::kEmptyString) {
    delete currentappversion_;
  }
  if (downloadurl_ != &::google::protobuf::internal::kEmptyString) {
    delete downloadurl_;
  }
  if (cashcurrency_ != &::google::protobuf::internal::kEmptyString) {
    delete cashcurrency_;
  }
  if (goldcurrency_ != &::google::protobuf::internal::kEmptyString) {
    delete goldcurrency_;
  }
  if (this != default_instance_) {
  }
}

void BINInitializeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINInitializeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINInitializeResponse_descriptor_;
}

const BINInitializeResponse& BINInitializeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_initialize_2eproto();
  return *default_instance_;
}

BINInitializeResponse* BINInitializeResponse::default_instance_ = NULL;

BINInitializeResponse* BINInitializeResponse::New() const {
  return new BINInitializeResponse;
}

void BINInitializeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    if (has_currentappversion()) {
      if (currentappversion_ != &::google::protobuf::internal::kEmptyString) {
        currentappversion_->clear();
      }
    }
    if (has_downloadurl()) {
      if (downloadurl_ != &::google::protobuf::internal::kEmptyString) {
        downloadurl_->clear();
      }
    }
    if (has_cashcurrency()) {
      if (cashcurrency_ != &::google::protobuf::internal::kEmptyString) {
        cashcurrency_->clear();
      }
    }
    if (has_goldcurrency()) {
      if (goldcurrency_ != &::google::protobuf::internal::kEmptyString) {
        goldcurrency_->clear();
      }
    }
    forceupdate_ = false;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    enablequickplay_ = false;
    enablecashsystem_ = false;
  }
  leveldirectory_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINInitializeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_currentAppVersion;
        break;
      }

      // required string currentAppVersion = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_currentAppVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currentappversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->currentappversion().data(), this->currentappversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_levelDirectory;
        break;
      }

      // repeated .BINLevel levelDirectory = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_levelDirectory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leveldirectory()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_levelDirectory;
        if (input->ExpectTag(42)) goto parse_downloadUrl;
        break;
      }

      // optional string downloadUrl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_downloadUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->downloadurl().data(), this->downloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_cashCurrency;
        break;
      }

      // optional string cashCurrency = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cashCurrency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cashcurrency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cashcurrency().data(), this->cashcurrency().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_goldCurrency;
        break;
      }

      // optional string goldCurrency = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goldCurrency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goldcurrency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->goldcurrency().data(), this->goldcurrency().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_forceUpdate;
        break;
      }

      // required bool forceUpdate = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_forceUpdate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forceupdate_)));
          set_has_forceupdate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_enableQuickPlay;
        break;
      }

      // required bool enableQuickPlay = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enableQuickPlay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablequickplay_)));
          set_has_enablequickplay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_enableCashSystem;
        break;
      }

      // required bool enableCashSystem = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enableCashSystem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablecashsystem_)));
          set_has_enablecashsystem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINInitializeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // required string currentAppVersion = 3;
  if (has_currentappversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currentappversion().data(), this->currentappversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->currentappversion(), output);
  }

  // repeated .BINLevel levelDirectory = 4;
  for (int i = 0; i < this->leveldirectory_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->leveldirectory(i), output);
  }

  // optional string downloadUrl = 5;
  if (has_downloadurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->downloadurl().data(), this->downloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->downloadurl(), output);
  }

  // optional string cashCurrency = 6;
  if (has_cashcurrency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cashcurrency().data(), this->cashcurrency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->cashcurrency(), output);
  }

  // optional string goldCurrency = 7;
  if (has_goldcurrency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->goldcurrency().data(), this->goldcurrency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->goldcurrency(), output);
  }

  // required bool forceUpdate = 8;
  if (has_forceupdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->forceupdate(), output);
  }

  // required bool enableQuickPlay = 9;
  if (has_enablequickplay()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enablequickplay(), output);
  }

  // required bool enableCashSystem = 10;
  if (has_enablecashsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->enablecashsystem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINInitializeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // required string currentAppVersion = 3;
  if (has_currentappversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currentappversion().data(), this->currentappversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->currentappversion(), target);
  }

  // repeated .BINLevel levelDirectory = 4;
  for (int i = 0; i < this->leveldirectory_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->leveldirectory(i), target);
  }

  // optional string downloadUrl = 5;
  if (has_downloadurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->downloadurl().data(), this->downloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->downloadurl(), target);
  }

  // optional string cashCurrency = 6;
  if (has_cashcurrency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cashcurrency().data(), this->cashcurrency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cashcurrency(), target);
  }

  // optional string goldCurrency = 7;
  if (has_goldcurrency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->goldcurrency().data(), this->goldcurrency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->goldcurrency(), target);
  }

  // required bool forceUpdate = 8;
  if (has_forceupdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->forceupdate(), target);
  }

  // required bool enableQuickPlay = 9;
  if (has_enablequickplay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->enablequickplay(), target);
  }

  // required bool enableCashSystem = 10;
  if (has_enablecashsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->enablecashsystem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINInitializeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // required string currentAppVersion = 3;
    if (has_currentappversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currentappversion());
    }

    // optional string downloadUrl = 5;
    if (has_downloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->downloadurl());
    }

    // optional string cashCurrency = 6;
    if (has_cashcurrency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cashcurrency());
    }

    // optional string goldCurrency = 7;
    if (has_goldcurrency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goldcurrency());
    }

    // required bool forceUpdate = 8;
    if (has_forceupdate()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required bool enableQuickPlay = 9;
    if (has_enablequickplay()) {
      total_size += 1 + 1;
    }

    // required bool enableCashSystem = 10;
    if (has_enablecashsystem()) {
      total_size += 1 + 1;
    }

  }
  // repeated .BINLevel levelDirectory = 4;
  total_size += 1 * this->leveldirectory_size();
  for (int i = 0; i < this->leveldirectory_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leveldirectory(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINInitializeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINInitializeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINInitializeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINInitializeResponse::MergeFrom(const BINInitializeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  leveldirectory_.MergeFrom(from.leveldirectory_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_currentappversion()) {
      set_currentappversion(from.currentappversion());
    }
    if (from.has_downloadurl()) {
      set_downloadurl(from.downloadurl());
    }
    if (from.has_cashcurrency()) {
      set_cashcurrency(from.cashcurrency());
    }
    if (from.has_goldcurrency()) {
      set_goldcurrency(from.goldcurrency());
    }
    if (from.has_forceupdate()) {
      set_forceupdate(from.forceupdate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_enablequickplay()) {
      set_enablequickplay(from.enablequickplay());
    }
    if (from.has_enablecashsystem()) {
      set_enablecashsystem(from.enablecashsystem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINInitializeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINInitializeResponse::CopyFrom(const BINInitializeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINInitializeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000385) != 0x00000385) return false;

  for (int i = 0; i < leveldirectory_size(); i++) {
    if (!this->leveldirectory(i).IsInitialized()) return false;
  }
  return true;
}

void BINInitializeResponse::Swap(BINInitializeResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(currentappversion_, other->currentappversion_);
    leveldirectory_.Swap(&other->leveldirectory_);
    std::swap(downloadurl_, other->downloadurl_);
    std::swap(cashcurrency_, other->cashcurrency_);
    std::swap(goldcurrency_, other->goldcurrency_);
    std::swap(forceupdate_, other->forceupdate_);
    std::swap(enablequickplay_, other->enablequickplay_);
    std::swap(enablecashsystem_, other->enablecashsystem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINInitializeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINInitializeResponse_descriptor_;
  metadata.reflection = BINInitializeResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
